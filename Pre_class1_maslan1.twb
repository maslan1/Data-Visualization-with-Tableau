<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0624.2136                               -->
<workbook original-version='18.1' source-build='2022.2.0 (20222.22.0624.2136)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders (Sample - Superstore)' inline='true' name='federated.1y7ncwf03p3pms1d46dgj0madhzx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.16dqfiv08gjtmx18otz231wvxxmw'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/User/Desktop/Tableau/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.16dqfiv08gjtmx18otz231wvxxmw' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.16dqfiv08gjtmx18otz231wvxxmw' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_620EE2833EC54EFB96E18EBD837254DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDE_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_620EE2833EC54EFB96E18EBD837254DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_620EE2833EC54EFB96E18EBD837254DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_620EE2833EC54EFB96E18EBD837254DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDE_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_620EE2833EC54EFB96E18EBD837254DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDE_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_620EE2833EC54EFB96E18EBD837254DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDE_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_620EE2833EC54EFB96E18EBD837254DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDE_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_620EE2833EC54EFB96E18EBD837254DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDE_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_620EE2833EC54EFB96E18EBD837254DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDE_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_620EE2833EC54EFB96E18EBD837254DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDE_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_620EE2833EC54EFB96E18EBD837254DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_620EE2833EC54EFB96E18EBD837254DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDE_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_620EE2833EC54EFB96E18EBD837254DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDE_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_620EE2833EC54EFB96E18EBD837254DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDE_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_620EE2833EC54EFB96E18EBD837254DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDE_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_620EE2833EC54EFB96E18EBD837254DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDE_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_620EE2833EC54EFB96E18EBD837254DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_620EE2833EC54EFB96E18EBD837254DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_620EE2833EC54EFB96E18EBD837254DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_620EE2833EC54EFB96E18EBD837254DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_620EE2833EC54EFB96E18EBD837254DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_620EE2833EC54EFB96E18EBD837254DD]' role='measure' type='quantitative' />
      <group caption='Aktion (Category,Sub-Category)' hidden='true' name='[Action (Category,Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Deutschland&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_620EE2833EC54EFB96E18EBD837254DD'>
            <properties context=''>
              <relation connection='excel-direct.16dqfiv08gjtmx18otz231wvxxmw' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generiert)' name='[Action1_049638EBE73D4A4B9036AA489B6B3EA8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sales_and_Profit_by_Category&amp;Sub-Category' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Blatt 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1y7ncwf03p3pms1d46dgj0madhzx' />
          </datasources>
          <datasource-dependencies datasource='federated.1y7ncwf03p3pms1d46dgj0madhzx'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y7ncwf03p3pms1d46dgj0madhzx].[none:City:nk]' context='true'>
            <groupfilter function='member' level='[none:City:nk]' member='&quot;New York City&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y7ncwf03p3pms1d46dgj0madhzx].[none:Customer Name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Aaron Hawkins&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Aaron Smayling&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Adam Bellavance&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Adam Hart&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Adam Shillingsburg&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Adrian Barton&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Adrian Shami&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Alan Dominguez&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Alan Haines&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Alan Hwang&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Alan Schoenberger&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Alejandro Ballentine&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Alejandro Grove&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Alex Avila&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Allen Armold&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Allen Goldenen&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Allen Rosenblatt&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Amy Cox&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Amy Hunt&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Andrew Roberts&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Andy Gerbode&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Andy Reiter&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Ann Chong&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Anna Häberlin&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Anne Pryor&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Annie Thurman&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Annie Zypern&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Anthony Johnson&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Anthony Rawles&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Arianne Irving&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Astrea Jones&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Barbara Fisher&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Barry Französisch&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Barry Weirich&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Bart Folk&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Bart Pistole&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Bart Watters&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Becky Castell&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Becky Martin&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Becky Pak&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Ben Wallace&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Benjamin Farhat&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Berenike Kampe&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Bill Eplett&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Bill Shonely&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Bill Stewart&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Bobby Odegard&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Bobby Trafton&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Bradley Nguyen&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Bradley Talbott&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Brendan Murry&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Brendan Sweed&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Brian DeCherney&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Brian Derr&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Brian Moss&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Brooke Gillingham&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Bryan Davis&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Bryan Spruell&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Cari Schnelling&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Carlos Daly&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Carlos Soltero&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Carol Darley&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Caroline Jumper&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Catherine Glotzbach&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Cathy Armstrong&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Cathy Prescott&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Chad McGuire&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Chris Cortes&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Chris Selesnick&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Christina Anderson&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Christina DeMoss&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Christina VanderZanden&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Christine Phan&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Christine Sundaresam&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Christopher Conant&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Christy Brittain&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Chuck Clark&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Chuck Sachs&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Cindy Chapman&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Cindy Schnelling&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Clay Ludtke&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Clay Rozendal&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Clytie Kelty&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Corinna Mitchell&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Craig Carreira&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Craig Carroll&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Craig Leslie&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Craig Reiter&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Cyma Kinney&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Cynthia Voltz&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Cyra Reiten&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Damala Kotsonis&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Dan Campbell&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Dan Lawera&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Dan Reichenbach&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Darren Budd&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Darren Powers&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Darrin Martin&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Darrin Sayre&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Dave Hallsten&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Dave Poirier&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;David Flashing&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;David Kendrick&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;David Philippe&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Dean Katz&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Dean percer&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Deborah Brumfield&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Deirdre Greer&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Delfina Latchford&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Denise Leinenbach&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Denise Monton&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Dennis Bolton&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Dennis Kane&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Denny Blanton&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Denny Ordway&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Dionis Lloyd&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Don Jones&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Don Miller&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Don Weiss&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Dorris liebe&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Doug Jacobs&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Duane Noonan&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Ed Braxton&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Edward Becker&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Edward Hooks&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Edward Nazzal&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Eleni McCrary&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Ellis Ballard&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Emily Burns&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Emily Ducich&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Emily Phan&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Erica Hackney&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Erica Smith&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Erin Ashbrook&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Erin Creighton&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Erin Mull&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Eudokia Martin&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Eugene Barchas&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Evan Henry&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Frank Gastineau&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Frank Hawley&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Frank Olsen&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Frank Preis&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Fred Hopkins&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Fred McMath&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Fred Wasserman&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Gary McGarr&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;George Ashbrook&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Giulietta Baptist&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Giulietta Weimer&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Grant Thornton&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Greg Guthrie&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Greg Matthias&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Greg Tran&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Hallie Redmond&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Harold Pawlan&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Harold Ryan&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Harry Greene&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Harry Marie&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Helen Abelman&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Helen Wasserman&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Henia Zydlo&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Henry MacAllister&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Irene Maddox&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;James Galang&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jamie Frazer&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Janet Lee&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Janet Martin&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Janet Molinari&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jasper Cacioppo&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jay Kimmel&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jennifer Braxton&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jennifer Ferguson&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jennifer Jackson&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jennifer Patt&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jeremy Ellison&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jeremy Farry&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jeremy Lonsdale&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jessica Myrick&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jill Fjeld&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jim Karlsson&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jim Kriz&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jim Sink&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Joe Elijah&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;John Castell&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;John Grady&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;John Huston&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;John Lee&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;John Lucas&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jonathan Doherty&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Joy Daniels&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Julie Kriz&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Julie Prescott&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Justin Deggeller&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Justin Hirsh&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Kalyca Meade&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Karen Carlisle&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Karen Daniels&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Katharine Harms&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Katherine Ducich&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Katherine Nockton&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Katrina Bavinger&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Katrina Edelman&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Katrina Willman&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Keith Dawkins&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Kelly Andreada&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Ken Brennan&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Ken Dana&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Ken Lonsdale&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Kristina Nunn&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Kunst Miller&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Laurel Workman&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Lena Creighton&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Lena Hernandez&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Linda Cazamias&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Lindsay Castell&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Lindsay Shagiari&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Lisa DeCherney&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Liz MacKendrick&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Logan Currie&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Lori Olson&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Luke Foster&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Luke Weiss&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Marc Crier&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Maria Bertelson&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Maribeth Schnelling&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Maribeth Yedwab&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mark Cousins&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mark Haberlin&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mark Hamilton&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mark Packer&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mark Van Huff&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mary O&apos;Rourke&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mary Zewe&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mathew Reese&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Matt Abelman&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Maxwell Schwartz&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Maya Herman&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Meg O&apos;Connel&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Meg Tillman&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Michael Chen&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Michael Grace&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Michael Moore&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Michael Nguyen&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Michael Paige&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Michael Stewart&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Michelle Moray&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mick Crebagga&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mike Pelletier&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mike Vittorini&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Mitch Webber&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Monica Federle&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Muhammed MacIntyre&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Naresj Patel&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Nat Carroll&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Nat Gilpin&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Natalie DeCherney&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Natalie Webber&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Nathan Mautz&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Neoma Murray&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Nicole Fjeld&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Noel Staavos&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Nona Balk&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Nora Preis&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Parhena Norris&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Patrick Gardner&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Patrick Jones&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Patrick O&apos;Donnell&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Paul Gonzalez&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Paul Prost&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Paul Stevenson&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Pauline Johnson&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Pauline Webber&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Penelope Sewall&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Pete Kriz&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Peter Fuller&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Philip Brown&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Philip Fox&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Philisse Overcash&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Phillina Ober&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Quincy Jones&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Ralph Arnett&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Randy Ferguson&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Resi Pölking&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Rick Bensley&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Rick Hansen&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Rick Reed&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Rob Dowd&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Rob Williams&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Robert Marley&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Roger Barcio&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Roger Demir&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Roland Fjeld&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Roland Murray&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Ross DeVincentis&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Roy Französisch&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Russell Applegate&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Sally Hughsby&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Sally Knutson&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Sally Matthias&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Sam Zeldin&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Sanjit Engle&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Sanjit Jacobs&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Sara Luxemburg&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Sarah Bern&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Sarah Brown&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Sarah Foster&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Scott Cohen&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Scott Williamson&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Seth Vernon&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Shahid Collister&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Shahid Hopkins&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Sharelle Roach&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Shaun Chance&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Sheri Gordon&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Shui Tom&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Sibella Parks&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Speros Goranitis&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Stefania Perrino&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Stephanie Phelps&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Stephanie Ulpright&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Steven Cartwright&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Steven Roelle&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Steven Ward&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Susan Gilcrest&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Susan Vittorini&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Suzanne McNair&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Tamara Dahlen&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Tamara Willingham&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Tanja Norvell&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Thomas Boland&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Thomas Brumley&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Thomas Thornton&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Tiffany House&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Tim Brockman&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Tim Taslimi&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Toby Braunhardt&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Toby Carlisle&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Toby Gnade&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Toby Swindell&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Todd Boyes&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Todd Sumrall&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Tom Ashbrook&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Tom Boeckenhauer&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Tracy Blumstein&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Tracy Collins&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Tracy Hopkins&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Troy Staebel&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Trudy Brown&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Valerie Dominguez&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Victor Preis&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Victoria Pisteka&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Victoria Wilson&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;William Brown&quot;' />
                  <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Zuschuss Carroll&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1y7ncwf03p3pms1d46dgj0madhzx].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1y7ncwf03p3pms1d46dgj0madhzx].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1y7ncwf03p3pms1d46dgj0madhzx].[none:City:nk]</column>
            <column>[federated.1y7ncwf03p3pms1d46dgj0madhzx].[none:Customer Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1y7ncwf03p3pms1d46dgj0madhzx].[none:City:nk] / [federated.1y7ncwf03p3pms1d46dgj0madhzx].[none:Customer Name:nk])</rows>
        <cols>[federated.1y7ncwf03p3pms1d46dgj0madhzx].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{A9FF61CE-3A36-4388-B346-30B4F3BF2C42}' />
    </worksheet>
    <worksheet name='Sales_and_Profit_by_Category&amp;Sub-Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1y7ncwf03p3pms1d46dgj0madhzx' />
          </datasources>
          <datasource-dependencies datasource='federated.1y7ncwf03p3pms1d46dgj0madhzx'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y7ncwf03p3pms1d46dgj0madhzx].[sum:Profit:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1y7ncwf03p3pms1d46dgj0madhzx].[none:Category:nk] / [federated.1y7ncwf03p3pms1d46dgj0madhzx].[none:Sub-Category:nk])</rows>
        <cols>[federated.1y7ncwf03p3pms1d46dgj0madhzx].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{95D4C037-D18A-4C25-9109-58EBB59E8E7F}' />
    </worksheet>
    <worksheet name='Sales_and_Profit_by_Sub-Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1y7ncwf03p3pms1d46dgj0madhzx' />
          </datasources>
          <datasource-dependencies datasource='federated.1y7ncwf03p3pms1d46dgj0madhzx'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y7ncwf03p3pms1d46dgj0madhzx].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1y7ncwf03p3pms1d46dgj0madhzx].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1y7ncwf03p3pms1d46dgj0madhzx].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y7ncwf03p3pms1d46dgj0madhzx].[Action (Category,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_049638EBE73D4A4B9036AA489B6B3EA8]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Category]' member='&quot;Furniture&quot;' />
              <groupfilter function='member' level='[Sub-Category]' member='&quot;Bookcases&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1y7ncwf03p3pms1d46dgj0madhzx].[none:Product Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1y7ncwf03p3pms1d46dgj0madhzx].[sum:Profit:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1y7ncwf03p3pms1d46dgj0madhzx].[:Measure Names]</column>
            <column>[federated.1y7ncwf03p3pms1d46dgj0madhzx].[Action (Category,Sub-Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1y7ncwf03p3pms1d46dgj0madhzx].[none:Product Name:nk]' value='460' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1y7ncwf03p3pms1d46dgj0madhzx].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1y7ncwf03p3pms1d46dgj0madhzx].[none:Sub-Category:nk] / [federated.1y7ncwf03p3pms1d46dgj0madhzx].[none:Product Name:nk])</rows>
        <cols>[federated.1y7ncwf03p3pms1d46dgj0madhzx].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{C4B22FBC-1EA1-4779-B814-4495D6C0CF71}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98214' id='8' param='horz' type-v2='layout-flow' w='98942' x='529' y='893'>
            <zone h='98214' id='6' type-v2='layout-basic' w='91931' x='529' y='893'>
              <zone h='49107' id='3' name='Sales_and_Profit_by_Sub-Category' w='91931' x='529' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49107' id='5' name='Sales_and_Profit_by_Category&amp;Sub-Category' w='91931' x='529' y='893'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='106' h='98214' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='7011' x='92460' y='893'>
              <zone h='7255' id='9' name='Sales_and_Profit_by_Category&amp;Sub-Category' pane-specification-id='0' param='[federated.1y7ncwf03p3pms1d46dgj0madhzx].[sum:Profit:qk]' type-v2='color' w='7011' x='92460' y='893'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='13' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98214' id='12' param='vert' type-v2='layout-flow' w='98942' x='529' y='893'>
                <zone fixed-size='280' h='49107' id='5' is-fixed='true' name='Sales_and_Profit_by_Category&amp;Sub-Category' w='91931' x='529' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7255' id='9' name='Sales_and_Profit_by_Category&amp;Sub-Category' pane-specification-id='0' param='[federated.1y7ncwf03p3pms1d46dgj0madhzx].[sum:Profit:qk]' type-v2='color' w='7011' x='92460' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49107' id='3' is-fixed='true' name='Sales_and_Profit_by_Sub-Category' w='91931' x='529' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C61D8EF4-B649-47B9-BE4B-E1966BD81DC0}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sales_and_Profit_by_Sub-Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1y7ncwf03p3pms1d46dgj0madhzx].[none:Product Name:nk]</field>
            <field>[federated.1y7ncwf03p3pms1d46dgj0madhzx].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8E4CBCD7-65E7-40DD-838F-1542B9625EBF}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sales_and_Profit_by_Category&amp;Sub-Category'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <fields>
                    <field>[federated.1y7ncwf03p3pms1d46dgj0madhzx].[none:Category:nk]</field>
                    <field>[federated.1y7ncwf03p3pms1d46dgj0madhzx].[none:Sub-Category:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;Furniture&quot;</bucket>
                    <bucket>&quot;Bookcases&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sales_and_Profit_by_Sub-Category'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{98CECE2A-9295-423D-90FD-98056389BE4C}' />
    </window>
    <window class='worksheet' name='Sales_and_Profit_by_Category&amp;Sub-Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.1y7ncwf03p3pms1d46dgj0madhzx].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1y7ncwf03p3pms1d46dgj0madhzx].[none:Category:nk]</field>
            <field>[federated.1y7ncwf03p3pms1d46dgj0madhzx].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE5CF985-4867-4DA0-A2E0-AD8B08403988}' />
    </window>
    <window class='worksheet' maximized='true' name='Blatt 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1y7ncwf03p3pms1d46dgj0madhzx].[none:City:nk]</field>
            <field>[federated.1y7ncwf03p3pms1d46dgj0madhzx].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C755255B-7425-4E62-8693-382F6BFE7F45}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Blatt 3' width='192'>
      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
      8J30zUQ3AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales_and_Profit_by_Category&amp;Sub-Category' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2d2XMcx5afv6rq6r3RG3ZiJwkCIAhwFSlRIqV7rzRexuEI/zUOv/jZD35w
      +GkiHBOOcMzDRHjCM54Iz72SqF0kxR0EQADE0tjRjUY3et+qssoPoLZ7SREA0Q02UN8TlkKd
      zEL9OjPPyTxHMk3TxMLimCIfdgMsLA4TSwAWxxpLAHvENE1KpdJhN8PigLAEsEcMwyCTyRx2
      MywOCEsAFscaSwAWxxpLABbHGksAFscaSwAWxxpLABbHGksAFsca2y+/EUJQqVQOqy11gRAC
      TdMoFouH3RSLA+AvBFAulw+rLXWBYRg1e066rmOz2V5/YZ3YMQwDSZKQJKmqdkzTxDRNZPn1
      E5xf9dput2O326vWsKOAEILi8m0c6VTVbdlNs+ovSy3tmKYJkkS1LZk7xnbVp1fKvpJL8+VX
      n4HaxIXrV2n2On/zRlohTaJg4lAMGhqCKMrBdzO3ucj9yQjuQAvnRwZxvMJGMpkkEAgiy9V5
      1GY5g2HGqnLvv7BVEyu1s1NLW7ux80oBmKZEZ/8IJ7t7UPUMywmDVmeBZMGGUc4SS6RpCnmJ
      LS+i+Tq50BdGKyS4ffcOzoZe3n23j4rUiF1LYFPtpFM51rdLnGlVeTS5wsCFy7QF3XvqUC6a
      5sz19xDLs6xGU/S0+tB1A9WugiHQdIFNtROLRfH5/JgmyJKEpmnINhUMHWGAalcxdB1hmKh2
      FVPo6AbYVRtC1xCmhF211eRT0eJw+Y2Jn8Hy7Dibmyku9HpYzbcSCiaJbTnY3lji3DtXic4+
      pefcVaKzM+QKDlKaytmRC/T0DVKJPmVFCeDNx3C5vTydTvDhzRG+/Zf/g7C7efR0ln99c3RP
      bijTyHH3y6/x2V1cutTJvW++ogh4Gntx5JZJFAQOfwcBR4WlmUkq3kbc+TVmozk6Tw+Sm3/E
      4naBkUs3WJu6S8kW5v33hrh36xu2NRg5P8rC5GMIdPH7dy+g2iwBHHV+4/1T6Bu6yIfvv4Pf
      6yEXX2FufgkdCLV1EfY6wO7G77ZjV3/WkVnOs7i4im6zkVyPsLgSxQA6+k7isin4gy2cOnOO
      kf4Te26sJPv44JOPGe1pYWtjCRHo4eaND6hsr1BUfNy8eQOXnkKrFFne2CIc8pPOwrs3b3C6
      WSFPAy0hN1vJAt3dPbgpk95aJVpx0dPZgdPtoae7G7WUJyfE3p+mRd3xyhFAdbnoaGvb+aah
      k+EOgVBbCAaCP13T09ODosic6OtFtdtw+EzsRgMrGxnczafpK60gdVygMeTDb9iQFBvnL55n
      NZrE6XLteTGkeuDOp5/itHsYvXQBaWGCW18scmr4Mmp2kS+++JqO0yN4bWWGh4JML6zR0R3m
      hy+/oP3UAE65TNnup9HnoJjOoUkqrnAfA82bJDM5WiUo5rOYqhP7LjwIFvWPZJ0J3htCCDYe
      /D1Bc+Owm2JxAFgC2CNCCBLxKE3h4OsvfkMqmoZdVY+MHV0IJElCqfLoahgGhmliU5TXXlv9
      6MdRRFaR1L15sPaDZFaQ1OrHZWpmR9J3AmG7eDHfCCGQTBNpF8E9SwD74PbzOMnJdNXtGIax
      q2hmvdj5cbJRk0gwOy7w11FXAjBNg631ZbK6SmtTCEVVcai178LCZpapLaPmdi0OnrpydWRW
      ppmO5sHQ2FxfZzv78g1pK8sRhLWysdgFdTUCzEfzXLtyBVWC+NIUD+58Q7mi8rt/9yGzd78m
      XlS5dPUa24kkzY4i/zK+TeeJJjIbEYr2MB9eu4jdVleat6gydSUAj2KS0wwCKpiyk9FrH6Cs
      LZLVc6QzGsV0io1UlnK5jClstPZfYKRd5nFqg0K+RMkwsNfXoGdRZepKACcHevji1h9RPEH6
      OtrxKjKyw4H5IqTm9vtx2mRwOJBsDvxON4aRxzAMTF3CsDy+Fn+GFQfYI0II/ts/3bcWwUcE
      SwB7RAjBVGQNu8dfdVuapqPWwMtVKztC7ByIqdY29R8xjJ0DMYqyxwMxFrujucFJc3P1BVCp
      VGpyQKlWdnR9JxCmVDkQJoTANM1dnXKzBLAPIski84XtqtsRQlT9Zamlnbf+SOTbjtDK5Itl
      ZFnF7XXt2Z9jGho6KuobOoJm4nnWKvqb3cTiraCufIKbk4+4OznJ7MIau9mtn4pGSP0yk3l8
      iqmtH7+psBJZ39V9LI4udTUCINnwB30EPD5iS8/xNvWxsTxH3wkfY5MbOMJBjM0o24UMzaev
      0iSK4Nzm+zsPwN/B1XaYefwdMVVw+b3LFIoVNiPTzC6vUzZ9vP/uAJMPHpDYLjH0wU3iT78n
      LTVw5Z2reK1cAUeSuhoBQMLhcuGwqxRzacrCJJVKISo5hLOV4VMtGI4wN3/3Pnpqm1ImRVk3
      EaaELO3MC3uGLnNxsJlstkg6laOYrzBw5Tqn/SprqTihjhEunW6lqAl0YaCqNoR1OuzIUlcC
      kCQ7J7q7aW8J4ZBNHt35humlOJKkEG4MoUig2h0oisKPHjBTAptsEo1tIoSJw+lElpWfT6PJ
      Npx2G4oi47Y7mZ+6x4OJeQzTwGZTSSU2yRe1w+qyRZWpqziAaRggy0gvvt45YCGjKBImErK0
      4wOWZQnDeNEtScLQdfjpOhkJA5B+vT3XNCnnk9y5/QPZssp7H39EUAXDlLDZlJ88F0II/u72
      DGsVx+E8BIsDpa4E8DYghODJ/BqSu/pxAMsNuj+OrBv0baEzYAXC9oMVCDsimIl5RH6m+nZ0
      HVGDnJ01s2MYOxsXq7wVwjRNDMNEWFshqoMY/99om9/XxFatlt+1XObXyqe2m+2KdeUFGr/7
      Of/rb/8nf/z6e9LFnx9jKRVhfv3H02FpHtyb3VXnLSzqagQ4d+136MYDBt57BzO1wdffT+Dt
      OMNQU4Xpx3dZXw1z+UIHui7Q8knu33tMoGuIvrDE/YcTNPad42xvy2F3w+Itoq5GgF+iVcoY
      psmTJ2OATPfgRU6FVNa2djapTd6/zXaxwtzEBNFkAmFz4bZX39NhUV/UrQDSiTjuxnYCnh1/
      fGJjiaVYEpdjJ427zx+g5UQXQ2dPE/CHCbkVpucih9lki7eQupoCgcSZkbM4gPa+IZR4ir6e
      ThxeB6e74yiubpqCHgIjYVzOXjY2YthcDXg9Kk2t7XQHmw+7AxZvGVYgbI8IIYj/8PeE9ern
      BrUCYftjL4GwXwmgWCySTlc/41k9YxgGhUIBr9dbdVtHsUYYUPUsdHuxY40Ae0QIwcrGJr5A
      uOq2NE1DrUHS2lrZES+S41ZdAKaBaRgoyhtFgk2K2W1iiSyNre14HDYyiSgl2UuDqpEqSrQ0
      B+t3Ff0GfPZsk0g+edjNsDgAXvn+6sUMj55MUCpmefBwDE2YTD2bwDArTI89oyQMVpYiGDWt
      rmby/MldZla2fvOyUmyauS2N1OZWTSOcFvXHK0eAfH6LUPsQAycbMZ88Yun5U55H1jGdHp4/
      m6Pf10bIraPn43zz3QNc4S46QwazkRjhrgHO93cceGNNQydTFkjJOGZnkPX5WZY30/SPXIT0
      OpHVKE3dAzSWcuRVA1cpjyPgZmZinIqzidGBTlZnZ4mmi/SfPYec32BqPsbA+YtsR8ZJSwGG
      T7XxfHKcsrOZCwPdB94Hi7eLVwpAUVSEXsE0TXRD0NF7jotCYfjcKVTdw+joSZ5PPCWxOE/f
      e5/Q6y1z6x//H5rHRyaTrUpjtUwEyd+PJz/PdlkjuplncLCPiadjhG0Gnf39LE9N4Wm2gWqy
      GY3hbwuRSm4xt7RAW3eApbU0Z061E117TjJR4exQP2Ziii/vzWBXDWz6ORbWkpw5140JVa9p
      a3G4vFIAHl8Lpclv+dPCGN6Wk7gdtheeAumnJEo2m43QiR6++vZTNho7aeluYmWzhMNRncMi
      c1PLRPNLGMUiRmMSxaYgtAqmYkNSDBAaAolfetlS6SgNrUOMyotopkGwsYUGXwNZPYssSQih
      IwmTk6PXONflQ7HZCAY8PHoyRm/Xx1hHgY82deUF2traorGxEVEpkioWmLn3EDnYzPDIOSIP
      viWr+jjZP0jYViQrBTDz2/j8bp5PTaE4Q3SebKOS1Whw28nrOhSSzCxu0n9ulGRknGTFSf+p
      DpZnZ8DXztmT7X/RBiEEf3trgki+zmKIFi+lrgTwawxy2SIenwcJk3w2j8vnrbpXSgjBP9+b
      JSGcVbZkVYiphZ06FsDhIIQgkUjQ3Fz9bRXWibD9sZcTYa+UvWnozE084Lu7j8mVd5kFrZxl
      I5nbdUMtLA6bV0okm1xiWw9z/oyXiqajKxKKImEYgCnQdIGi2rFhUNF1kGzYS0kiMRveSpSi
      7yRhh4amm9gddoRWQRgSDqe97j0r3y+lSCxVDrsZAPQGXfz+VPWj0keVVwrA7WtGS97mfqGJ
      K5c6uH8vxcWRIM/mU9iyETZNFUEDl5oFt9cqqKLMlbO9gI385iZ55wlm73xONFWm/+IlVsYe
      owY6+eCjK+x79myarMyOY/h76G5p+OnHQitjKg5qVf3INHd33K4W1DQQeQR55SsjySoXrv+e
      820q89HMTjygUkIzwN3QwrXrH+B3GCA7GLn6HgM9jZQKP38q6pU8iYxGT28PHoeHkyd7cBpp
      0oX9N9Y0BdFkhsTmOiYGhXyOjfUNnt/7mgfPl8jvdqpmYfGCVwpAlHM8/P4rHi1l6Ai34RAr
      /PA0gqfBQ357ja9vfYmnsRPJLHHv61usZ2w0toQIep04GoL4vX76OhtJbmeQJcjnsmiKG/cb
      7LnS8+soDb04K1myWoXH331HLF3ENMyfdgBaWOyFfXmBNldXCXR0YAcKm6sUAx2EaxAxmr93
      iydxDamc4+zVG1TiCYZGB0jPPSbVPEpvg1x1F5sQgn96OM8W1a8Uvxt6gy4+Pv1ma4Dj7AXa
      VzSnuePnfT7u5o6avQr2tn7+wzud6IUM8XwZpbUJSZLwtnYw9vA2DZeu0uizYrcWu6euwpmd
      nZ0AqO4G2n+hOruvmY8+rN1xR7si4apB4Gg3m5EcVt3jN6KuBPC28E6n/0gFwo4z1seHxbHG
      GgH2wT8/WGYxs1J1O6ZhIlU5j2ZN7byFe4HqSgC5zQg/jEdwB1u4ODqEQ3lFB7UMWwUHjf7q
      bMtO5Mosxa2Yw1GgrqZAuWiGoRsf0OmH1Y0Uy4tzVDRBuVymVH5xeEerUMzGWNsqYQiNYqmE
      MEyEEFTKZYQhKBWLVHSr7JFFnY0AppHjzhdf4rO7uPROP0sTU3j1LF8vZvFqWc5eeY/Z8YdI
      IoezM8STO7dYjOVoG3gHT3qGWNnNqTYHD6ZjDIxc4lxf62F3yeKQqSsBSLKPDz55D3Nplq3t
      HwtV2xi99gGh5DgbyQLNJwfp95d4GjVZ39ymq7cfj9uOoYf44OpFyMboTlVIJ7cx+lrrawi0
      OHDq6v9v90rc+/RTnkbihPx+/MEQqqcBtw1srgbCLUEKK7N89ziCx+tg8HQficQ2yDKBYBhF
      ktC1MtlsHo+v+omtLN5+rAMxe0QIwX/9h7tMxKxF8FHAEsAeEUKwEYsTDFV/D35F07DXIGNb
      rezoLzLDKTVIjWiYJrZd7DmqqzXA24LdJuNxVv+FUWUTu/3o2NF16WhshjvuzMQLjGcONjXi
      ybCLnqDrQO9p8XrqSgClzBaRtTiK6qS7pxfH61pvClKZAgG/70DbsZmvsJV7g5M9LyHktlkC
      OATqygu0HVlC83hwu127q7RpVHg2s1D1dlnUL3U1AmCWiMzOknL5sGllxp5PUMoIrvzhOtsb
      ebrCMokKbC8vspUvMTByCYBMLMLdx9NoppvrN85x/4vvqEg2zr5zlVxkmo1skZMDI8TmHpOV
      Aly/egmPs74ejcX+qKv/siR7uXrzKo1I5DfWOXPxGo3pdTYlH3p+mTUhE2pw8P3qFo0NLoql
      EgCbWwlG3v09zth9ItvQdeYivWHBs5V5JhaiNIW8lCo6Po+bTKpMUQg89fVoLPZJXU2BZFuF
      H27d4ps79yiaKqrNhqzaUW0qnY0S0aKPprZOOvwOJFnFYbfhdDpoaWpi4u4X3Fk06QsKZsfu
      8MWDeVp6+jnZ5AHZhqrKCLFTWMHyDB8fjl0cQCtn2Ngs0dW5vwMtQgj+8eE8W+bBHgR9p7OB
      C+0Nv/qZlRluf1hu0N9AdTTQ1dnw+gt/g9E2H95A6IBatIPXqmF8KBw7ARwEDQ6FZl91zhpY
      1BZLAPsgm8tiSD/nIWoON9cku7LFwVNXAhCVEtlCCVlR8fo8h7aCT2VTZIqZn75vDDUi15c/
      weIFdfVf23z2hAczMywsRXnVea54fINi0dqpabE76moEQJLx+Lz4vB7ym4s8GnuOt+0Up/0V
      7k2t0HPqDAsTd9EI8u6NS8yPP0WzBxjpa2VseppCusCF3/0VuYVHLG4WGLxwhfzqJLGkSVeX
      h6nZdU6eu8KptsBh99SiRtTVCAAKHp8Pt8tBYmub0Xc/IJdYRXGHGR3uI57MMzB4lus33kfd
      WsDec4mLQ90YpQLBrkH+cKmNtXieWE7mxvXLOGUolAQX3r1IoKGZkcEuNqO/XYLV4mhRVwLw
      NLXR19lJW1OQcLCBsXsP8IVbQM8z+WyR5tZmWsJBnj68h2g5gx75gfvjC0huPy1BH4q3hdag
      hzafyVff3SdXEbSc6MJlVxDlNM9mVmlpbTzsblrUkGMXCHtThBA8nXyKov7stx/qH8KmHPxs
      0gqE7Q8rEFZlTrSeqElqRIvqU1dTIAuLg8YaAfbBeCxHIbH/9H5nWzz0hd6O+gLHnboSQCGZ
      RAqF+PNzU8lkklDoL/fmlAspCrqLYMPBblvIlHWS5f0XyevVrJNfbwt1NQXKrK6yU4TVxDAE
      ur6z2FldXUMIgWGYmKb509fFTJT1rcLOtS8WRhYWv6SuRoCfMZh9fJuJxXW6hz9EzsX57usv
      0GwhznSoPHoyj9nQxs3hABglvv/sO9Kigff/cJ2AvU67bFEV6moE+AlRJl2CttYAmxtb2LxN
      fPDhR7R7BJHFZTyNrbT4PegAskpHVxc+R4V03kqIa/Fr6koAqtvkhz/9iTsTy7jtEhWctIR8
      eKUitz7/koq3jeGBQcxSBt2UsTs8eJ0K5VKBimHDpdZVdy1qgBUI2yNCCP7v43mSePZ9j6ud
      foZbXp+b1AqE7Q8rEFZlrpzwEwzvf8uE/VWFPSxqjiWAfWBXJDzWEcYjgSWAffDts3W2HsWq
      bscwjJqcNKuVnWrXCBvtbeLamb0VPakrAZRzSVaiSZzeIO0t4d1lh6sCM6vbjK2XDse4xSvx
      ONU9C6Cu3CLJ+XnSEqxHplhL5A+7ORZHgLoaASTJQVffSUpmnlIqwe3Ju6RLdt6/eZlHX/+R
      gnBw6vx7qKlZZtfSdPSfRUqssJHVOH/lCkG3VXTa4tfU1QhgGlm+/ewzNvJumv0yxYpGYWOe
      jTw09QzxyY2LpFNrPH28gDAE2WweIWQuvXuNgPXyW7yEuhoBbI4QNz+5ThjIb61gGCZevx8F
      g/mphywthBm49C5KzxqxHDgcdpxKA067guV4tHgZdSWApsHBn772NHby8V91AiDKZeQL1+nt
      7t75ZfMnh9E8izrEigTvESEE47PLyM6DLbrxMnRd31U0s17sGC9qhElVcrk2NbhoC3msSHC1
      aQ95aG6u/uF5aytE9bEEsA9mYzmmDrZE2EsRQtTkZamVHcMwdkaAKgXCfsQ0d86F7Ca4V1cC
      MA1BqVRGsqk4VJUqP8dXMracYi6Tef2FFm89dSWA5WcPiWxXUFUP5wa6KUoOWvz735VpYVFX
      AhCGidsXpLe3m43J2zzYKHD56g2krWmW4mVOj1xEza2xvJHi1OBJxh8/xRFo58JQB+MPH5HO
      lBj56GMysw9Y3RaMXL5Mo9dKc36cqatAWO/wJbob3UQmxwl0D3Hl+g3OdEhsZhr46P3zrC2v
      kEom6B6+gMcooBsm0cgk00tRTpy+yGhHA9u5TcaeRihlE2wksofdJYtDpq5GgOXn4yxtZhCG
      gmqXmH/0EBsXkSrLfHcnhrftNE7TIOB1UVpMI1QnXo8Dj93O1Ph9jFSCvq4RgmEvDl+ABpf1
      6X/cqas4gCF0yhUNxWZHtclUymVkmx0ZnYpuYLc7wDSQZQVMQblcQbbZqGTjfH/7PvmKg9//
      +7/CY1TQdBO7w46yR5+0EIK/+eMYc5m6GjwtXkFdCeBtQAjBD1NL6Gr1A2FC6ChVyDl6WHZ2
      3KAgSdX98DBNA9Pk6LlB3xZONXtpbm6quh0rELY/rEhwldHLOYrZ6gchdE1DqOqh25ElBYf3
      YKtivi1YAtgH2fgiIlk87GbUDJvdTdvgR4fdjKpQVwKIzY3xeCGGwxXk6rtXcO+i9dGFp2jB
      AeTcOi0nerBZa1eLX1BXAthKpukdGKWnLUwpHSPtCCCSMWxtrSyP3SWWV7hw+Qq5tWfMLW/R
      ffYyTl1DGCayCRglHt29g+7r5Gx3gMcPn+DvOsvwyTbrvMAxpa4EMHT5Gs/Hn3BnMUJrsw9P
      0I2+to69qRHdHuR6XwNPF6M4yhrXb37Avftj9DXuLLhiG+uY2ytMbxVxR8dwyGcoSy68ThVM
      sBRwPKmrCcHG8iK4AnhUgWlKrK9EmFuJAlBIx5lf3MDpdiDKeSLzc5jKr9OQq24fbe1dnB09
      T3tTI81+OzOzcxiWI/jYUlcjQLipmcrmNj2Do4Q9NtbWY3SduE5AklhRFHwtPbS1NjMZf47N
      7uXS+Q5Uo4hhU2kaOofL62ZgZQVNceH1efAHG2nrazm09CoWh8+RCISZhoGm6z/5sivlMqrd
      UZXt0kIIVubHaXDVYv+82IlqH7IdxWbH33bmje28jXGAXwmgWCySTqer2rh6xzAMCoUCXu/r
      k9u+KUfuSKRhALuL0NbKzpEYAWqJEIKl1Sg+f7DqtipaBbtag0hwjewIoSNJck0EYJjGrkrX
      vvKKYjZJfHunIJEv1ELwJfvmtWIRnE7U18w1ioU8dqcb5YhMtv/2j2Pci1gnwo4Cr5Si0Cqs
      Lz1nNhJF019eWSW1sEBCvL7qytzzSfIVY/+t/BHTZPbpPZ6vbr35vf6MSiFNpqAd+H0t3m5e
      OQJ4Q6309WXI6I00++DxnW9JlEzOjZ5ndeoBiYqL0wGFZ99+iVJxcPWdIZ48fkQ5V+LM+x+T
      nv6eWNak5+zFnRvqOb757C5FVM5dusz2/FNWt7M0NA8QUPKcHjrFwuwafWdOYnvFQGEaOumi
      hpSMY3Y0ktlc4vlSgjPnRojPj1OyN9Ld7GBmdpnugRHshSjTSwlODQ6iJZZYipc5d36Y1MoM
      GzmZocHTlLIJ4mtJGtu9lBUXYmOR+Y0cQ8ODZNZnWU0JBocG8djrymNssUt2tfIpxxeYXEvT
      6FWJra1jb+rj41NdxKeeMfreedTFKXJlQXPfWQY9WcYLCUp08fGHzdwZX6fBBqWNGbwDN7ns
      TTMzPw7+Hj6+7OSHO9u0dEpMTK3g8npf+fID6Jkl5EA/nnyE7VySZ3NJBge6yC2Nk7K3cLLJ
      yYNvPmezBAvxIn2uHCX3CRRFY+zpNJ6ufiq5DSIxQW+jzmQkSmnhHq0jNzAySySQmL13B82o
      sC08yBtPCPRdwqpncXT5TQHIkoIiS9hDnTTaF3bcYY1BNp6P8enqOmcaG3DbFGSbDVmSsasq
      smLDpoSgNMafbs3TMXABJV/C1drN1je3+Eq2cfbCJdafPeTzlQqSvR9/SzdbY19x4Q//5jcb
      Oze1yFpWYJSKCF8IWVaw2WxokoSi2FBkCdXXys3rI8imiR2N6NIsU4tbjFx5h7W5h8xEh0CW
      URQTUzMJtPXR2xokvbSEaRgETpxmdPgUJjaMrutE5uZZjjbS31n9Ra9F7TkcL5AoMfbgPrF0
      np6ha7hyC8TMMJcHu3/zzzbjcZqbmhDlAttFga20xVQkztCFC2w+f0LR3kxPs8rU9CKNPWfw
      G9vMrqUZGD5Lbm2WlbTJpYvDbC1OsZ6VOHd2gGI2RSAUopJNUFT86MkIz1eS9A2eoxJ7TjRv
      49zIEK4Xu+iEEPzn//EnaxF8RLDcoHtECMHf/ONt5uLlqtsyDBO5Bp6zWtn58U2rdj6nvdix
      BLBHhBAkEgmam5urbss6EbY/9hIJtlwbFseautoM97bwX/7uC757Vv0ieSYmUg32adfKzttI
      XQnA0EuMP7xHyvBy5dJ53K/wzZdKJRwOR9WSsJYrgnypUpV7W9SWuhLAxsw4zp4LvBuwgamz
      uRHHdPhoCrjZjm9SFDZaWpqIbqzR0dVDeiuKrnhp9LsolUsUKuCUSqQKBi2tLVbBaos6E0Ae
      Lp71IQPRhQkWkzpmZprKhVEiE3P4PDJpXaYYjxG0V/j0u2fINoWro8NMr6xyun+YicdfoDSe
      IdjYhP0tylNvcTjUlQDaPPA8mqEvqJLOFWjrHsK2liZdkWk60cMJX5GFkg5AKb1N48lhTjc5
      8aHT3X+OvvYQbnGZ1bUosUQOb7v/kHtkcdjUlReo7cwIleUn3Hk0RVtPP7GZ+yyZbfQ1GCxM
      3OPJSoHTnU20tLYTOnWeQGGVxfUtFG+Axoad45HZZIysptIUstKqWxyROIDQS6QyFcKhhurb
      EoL/+N//gdvT1fcCWVSfIyGAWmIFwvaPFQizsHjLqKtF8NvC3GaK6VT19wKZpln1gnK1tMOP
      c41qm9qDnboSQD6+TFTzcbI9SDaxSjTv5HTXy8uVJpIJwqFwVdpRqGgUdGvwPArU1X8xu77F
      zNoCpmmwNveU2dVtTEOgaRpCGJimia5p6MJgbW115+eGQTK6RipfRggdTdMwDHMnlcqLr40X
      9zCsDFnHjroaAZBsnPDorCeT5JUgflUmvTHHlz+Mo4b6uNKl8mQuSmvPILn4Mt/GouDvotNX
      xu9w8cVn3yC5XQQ6z+DJrzC9HCfcPYyvuMBqRuHitfc4YblHjxV1NQIAhDraiamkZtIAAAYM
      SURBVDybJhQOIwGbiRTtJ9opJbaIZ/JcfP8jhk+24Wvu5ncf3aDR83Pe+9a+YW5+cAOvlGJl
      PUnriQ4CXgdtHb0EvXZSGato3nGjrgTg8PnweYJ47CrhlmYCDW78Pg/ZbInW9hZOdHYweedL
      xuc38Hp9gIzP68btacCuqvh8bmRFweNrZLC/k0w6jSkpVMoFimUdt8v12jZYHC2sOMAeEULw
      5dg0BdmqMHkUsASwR4QQxOJbhMLV8TD9Ek3TUGtQIqlWdoQQSJJUk8xwpmnuKuBWX4vgtwSb
      LOFUq//oZNPAfoTs6BJvXSTYEsA++NODBdYyc1W3YxhG1T8ta2nHNEx4IYKq2jFNMEHaxUH/
      uhJAOZtgaSOJyxekLeyjgozbXv2h+8+ZWIxzdy5Vc7sWB09deYGSCxFyNoXo0jSL84usJi23
      pcWbUVcjgCTZ6eztpSQy5AoV5p/cZa5U5tzv/i3x8W/YzGh0Dl2msvqYeN7EGe5mpE3l4VQE
      V/AEXZ4KE0ubdA+cZ7Cr+oWuLd5+6koAppHl288+o6O1l7NtTqSmds4oazxK5jBd7Xxy7QT3
      763ibmjho6tDTM1MMz85Q044MQp53C0BJEwKheNT49fit6mrKZDNGebmJ5/wzshpVMWGXVWQ
      FDtulxe5sMafPr2Np60Zp92BLEnYVScn+rpRhIHD4UDTdCTTRH9FuneL44cVB9gjQgj+09/8
      P2sRfESwBLBHhBA8mY4g2WtRI0zDZqu+l6tWdt76QJhVJO/1GIaB3wE1qJGHEDK1yNxSKzuG
      ISFJUg2S40qYJuxGZ9YIsEdqeSbY2gqxP/YyAtTVItjC4qCpKzfocaMWn8q1tFPtPUA/spcR
      xhoBLI41lgD2ST4V4+n4FPmKTimdpgwUs9tki/q+7ie0IjMTT5hdimGYBhuLMzybX8M0BelM
      DhAk4gmMA1iyGXqBuYVVwGRrbYHxmUV0w3zhADHY3tpCO4Dz0aKcZWLsCSvxzE7/Jp+ynshh
      6nnSOR29XCCZyr2xnWImztMnT9hMFzCExvzUOEvRbUxRJJ0rYxgVtrZe7ra2BLAfRJGJZwsE
      vCZPJ5dILS2xrRV49mweRd3fI01tRnEEWygmFlhZWCCybaBszzIby7G0ukFybZ6NTOVAMoos
      TT3h0fMlKulNnq+lcZfWmVrLsLS8Qi6xRiSWOYDKmAZjDx7ibWzF61BYnRlHcwZYmHpKKRdj
      KZZnfnqSivSms/AKU+NzhFpbeDY+TmJhnJTcwGZkkmQ6wdJGluWpMfK8PPGXJYB9IMoa7nAz
      XT0DuMQ2upHjm3/5nNDpYdy2/T3SUHsPTR4JU27AEAa9vV2cHOknt7ZFYmmSezMpTve2vvFW
      Yj27TlJuoyNgJ1+q0Haik75z/ZRiSXKxeb66H2FgoBf5jX2VOVLJEnPPJtjKFilUnJzs66Il
      5KVc0Zj44RYZtY0Wv/MN7aiE/DITY09x+MJsZyXO9Hdz4kQTpUyR+bFvWC4F6Wp0v/SvLQHs
      A1mRKJVK6HoB3XQiy17eeW+U2PIK+505lJKrPN8oMzx6lgbVJFcqo2UyyF434e5BegImW6ki
      bzoxGXvwiI3laSbGJ1nZzFAoldCzWSS3C29LL8OdHtY3M29sB1S84RZufHST6OwzDLNMsaJT
      0jRsisLQpXcR2+uUdOPNzIgS8ZyNmx99SCkVwy5r5Eo6pVIJxW7j5Og17Lkoee3ldiwB7APJ
      4SEs5/ns8+8JdHbicLnwh7vo8mpEU4V93XNtYYG15Wk+/+p75GAT8elHfPNkk1M9IVxON/3n
      zrK1toT+hnPzSx/9NX/9rz7h2rvvcG6wj1Jsjs9/iNDbE8bl8tB9Zpjy1jJF7U0l4KKjxcY3
      X3yJvbGDrs4mHnz5OTnTh8vlxuP1M3ymjcWVzTczI9sJuQXffvU1ijdMW18X419/zuq2RCjo
      w+V0c+lSP3NzKy/9cysQtkdqGQizqD7WCGBxrLEEYHGssQRgcayxBGBxrLEEYHGssQRgcayx
      BGBxrLEEYHGssQRgcayxBGBxrLEEYHGssQRgcayxBGBxrPn/3YjPWWevlIoAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sales_and_Profit_by_Sub-Category' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
